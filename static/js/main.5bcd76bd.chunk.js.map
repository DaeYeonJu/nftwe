{"version":3,"sources":["components/Layout.tsx","web3Config.ts","components/AnimalCard.tsx","routes/main.tsx","components/MyAnimalCard.tsx","routes/my-animal.tsx","components/SaleAnimalCard.tsx","routes/sale-animal.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Layout","_ref","children","react_default","a","createElement","chakra_ui_layout_esm","h","bg","p","justifyContent","alignItems","fontWeight","react_router_dom","to","chakra_ui_button_esm","size","colorScheme","direction","web3","Web3","window","ethereum","mintAnimalTokenContract","eth","Contract","inputs","stateMutability","type","anonymous","indexed","internalType","name","outputs","components","saleAnimalTokenContract","AnimalCard","animalType","chakra_ui_image_esm","w","src","concat","alt","Main","account","_useState","useState","_useState2","Object","slicedToArray","newAnimalType","setNewAnimalType","onClickMint_org","_ref2","asyncToGenerator","regenerator_default","mark","_callee","balanceLength","animalTokenId","wrap","_context","prev","next","abrupt","methods","mintAnimalToken","send","from","sent","status","balanceOf","call","console","log","tokenOfOwnerByIndex","parseInt","animalTypes","t0","error","stop","apply","this","arguments","onClickMint_cezanne","_ref3","_callee2","_context2","Math","t1","t2","t3","t4","t5","floor","t6","t7","String","t8","t9","t10","t11","t12","t13","t14","t15","t16","onClickMint_monet","_ref4","_callee3","_context3","onClickMint_ukiyo","_ref5","_callee4","_context4","onClickMint_vangogh","_ref6","_callee5","_context5","components_AnimalCard","mt","onClick","MyAnimalCard","animalPrice","saleStatus","sellPrice","setSellPrice","_useState3","_useState4","myAnimalPrice","setMyAnimalPrice","onClickSell","setForSaleAnimalToken","utils","toWei","textAlign","Fragment","chakra_ui_input_esm","value","onChange","e","target","d","fromWei","MyAnimal","animalCardArray","setAnimalCardArray","setSaleStatus","getAnimalTokens","tempAnimalCardArray","map","v","push","getIsApprovedForAll","response","isApprovedForAll","onClickApproveToggle","setApprovalForAll","useEffect","display","ml","templateColumns","gap","i","components_MyAnimalCard","key","SaleAnimalCard","getOnSaleAnimalTokens","isBuyable","setIsBuyable","getAnimalTokenOnwer","ownerOf","toLocaleLowerCase","onClickBuy","purchaseAnimalToken","m","disabled","SaleAnimal","saleAnimalCardArray","setSaleAnimalCardArray","tempOnSaleArray","onSaleAnimalTokenArray","animalTokenPrices","components_SaleAnimalCard","App","setAccount","getAccount","accounts","request","method","components_Layout","react_router","path","element","sale_animal","main","my_animal","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","chakra_ui_react_esm","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.5bcd76bd.chunk.js","sourcesContent":["import React, { FC } from \"react\";\r\nimport { Stack, Flex, Box, Text, Button } from \"@chakra-ui/react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Layout: FC = ({ children }) => {\r\n  return (\r\n    <Stack h=\"100vh\">\r\n      <Flex\r\n        bg=\"yellow.100\"\r\n        p={4}\r\n        justifyContent=\"space-around\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Box>\r\n          <Text fontWeight=\"bold\">2022-Capstone</Text>\r\n        </Box>\r\n        <Link to=\"/\">\r\n          <Button size=\"sm\" colorScheme=\"green\">\r\n            Main\r\n          </Button>\r\n        </Link>\r\n        <Link to=\"main\">\r\n          <Button size=\"sm\" colorScheme=\"blue\">\r\n            Register\r\n          </Button>\r\n        </Link>\r\n        <Link to=\"my-animal\">\r\n          <Button size=\"sm\" colorScheme=\"red\">\r\n            My NFT\r\n          </Button>\r\n        </Link>\r\n      </Flex>\r\n      <Flex\r\n        direction=\"column\"\r\n        h=\"full\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n      >\r\n        {children}\r\n      </Flex>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import Web3 from \"web3\";\r\nimport { AbiItem } from \"web3-utils\";\r\n\r\nconst mintAnimalTokenAbi: AbiItem[] = [\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"constructor\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"owner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"approved\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"Approval\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"owner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"operator\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"approved\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"ApprovalForAll\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"to\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"approve\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"mintAnimalToken\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"from\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"to\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"safeTransferFrom\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"from\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"to\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bytes\",\r\n\t\t\t\t\"name\": \"_data\",\r\n\t\t\t\t\"type\": \"bytes\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"safeTransferFrom\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"operator\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"approved\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"setApprovalForAll\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"_saleAnimalToken\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"setSaleAnimalToken\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"from\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"to\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"Transfer\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"from\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"to\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"transferFrom\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"animalTypes\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"owner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"balanceOf\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"_animalTokenOwner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"getAnimalTokens\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"components\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\t\t\"name\": \"animalTokenId\",\r\n\t\t\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\t\t\"name\": \"animalType\",\r\n\t\t\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\t\t\"name\": \"animalPrice\",\r\n\t\t\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t\t\"internalType\": \"struct MintAnimalToken.AnimalTokenData[]\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"tuple[]\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"getApproved\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"owner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"operator\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"isApprovedForAll\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"name\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"ownerOf\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"saleAnimalToken\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"contract SaleAnimalToken\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bytes4\",\r\n\t\t\t\t\"name\": \"interfaceId\",\r\n\t\t\t\t\"type\": \"bytes4\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"supportsInterface\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"symbol\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"index\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"tokenByIndex\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"owner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"index\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"tokenOfOwnerByIndex\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"tokenURI\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"totalSupply\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t}\r\n];\r\nconst saleAnimalTokenAbi: AbiItem[] = [\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"_mintAnimalTokenAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"animalTokenPrices\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"_animalTokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getAnimalTokenPrice\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"getOnsaleAnimalTokenArrayLength\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"mintAnimalTokenAddress\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"contract MintAnimalToken\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"onSaleAnimalTokenArray\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"_animalTokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"purchaseAnimalToken\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"payable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"_animalTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"_price\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"setForSaleAnimalToken\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }\r\n];\r\n\r\nconst mintAnimalTokenAddress = \"0x9c8c8EC952bAd3faa2E8671A0e790dCeF0Be9465\";\r\nexport const saleAnimalTokenAddress =\"0x5852249D421b6D6A1483145D38044710B1D75904\";\r\n\r\nexport const web3 = new Web3(window.ethereum);\r\n\r\nexport const mintAnimalTokenContract = new web3.eth.Contract(\r\n  mintAnimalTokenAbi,\r\n  mintAnimalTokenAddress\r\n);\r\nexport const saleAnimalTokenContract = new web3.eth.Contract(\r\n  saleAnimalTokenAbi,\r\n  saleAnimalTokenAddress\r\n);\r\n","import React, { FC } from \"react\";\r\nimport { Image } from \"@chakra-ui/react\";\r\n\r\ninterface AnimalCardProps {\r\n  animalType: string;\r\n}\r\n\r\nconst AnimalCard: FC<AnimalCardProps> = ({ animalType }) => {\r\n  return (\r\n    <Image w={150} h={150} src={`images/${animalType}.png`} alt=\"Card\" />\r\n  );\r\n};\r\n\r\nexport default AnimalCard;\r\n","import React, { FC, useState } from \"react\";\r\nimport { Box, Text, Flex, Button, Image } from \"@chakra-ui/react\";\r\nimport { mintAnimalTokenContract } from \"../web3Config\";\r\nimport AnimalCard from \"../components/AnimalCard\";\r\n\r\ninterface MainProps {\r\n  account: string;\r\n}\r\n\r\nconst Main: FC<MainProps> = ({ account }) => {\r\n    const [newAnimalType, setNewAnimalType] = useState<string>();\r\n\r\n    const onClickMint_org = async () => {\r\n        try {\r\n            if (!account) return;         \r\n            const response = await mintAnimalTokenContract.methods\r\n                .mintAnimalToken()\r\n                .send({ from: account });\r\n            if (response.status){\r\n                const balanceLength = await mintAnimalTokenContract.methods\r\n                    .balanceOf(account)\r\n                    .call();\r\n                console.log(balanceLength);\r\n\r\n                const animalTokenId = await mintAnimalTokenContract.methods\r\n                    .tokenOfOwnerByIndex(account, parseInt(balanceLength, 10) - 1)\r\n                    .call();\r\n\r\n                const animalType = await mintAnimalTokenContract.methods.animalTypes(animalTokenId).call();\r\n                console.log(animalTokenId);\r\n                console.log(animalType);\r\n\r\n                setNewAnimalType(animalType);\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n    const onClickMint_cezanne = async () => {\r\n        try {\r\n            if (!account) return;\r\n\r\n            const response = await mintAnimalTokenContract.methods\r\n                .mintAnimalToken()\r\n                .send({ from: account });\r\n            if (response.status)\r\n             {\r\n                const balanceLength = await mintAnimalTokenContract.methods\r\n                    .balanceOf(account)\r\n                    .call();\r\n                console.log(balanceLength);\r\n\r\n                const animalTokenId = Math.floor(parseInt(await mintAnimalTokenContract.methods\r\n                    .tokenOfOwnerByIndex(account, parseInt(balanceLength, 10) - 1)\r\n                    .call(),10)/5)*5+1;\r\n\r\n                const animalType = String(Math.floor(parseInt(await mintAnimalTokenContract.methods\r\n                    .animalTypes(animalTokenId)\r\n                    .call(),10)/5)*5+1);\r\n                console.log(animalTokenId);\r\n                console.log(animalType);\r\n\r\n                setNewAnimalType(animalType);\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n    const onClickMint_monet = async () => {\r\n        try {\r\n            if (!account) return;\r\n\r\n            const response = await mintAnimalTokenContract.methods\r\n                .mintAnimalToken()\r\n                .send({ from: account });\r\n\r\n            if (response.status)\r\n            {\r\n                const balanceLength = await mintAnimalTokenContract.methods\r\n                    .balanceOf(account)\r\n                    .call();\r\n                console.log(balanceLength);\r\n\r\n                const animalTokenId = Math.floor(parseInt(await mintAnimalTokenContract.methods\r\n                    .tokenOfOwnerByIndex(account, parseInt(balanceLength, 10) - 1)\r\n                    .call(),10)/5)*5+2;\r\n\r\n                const animalType = String(Math.floor(parseInt(await mintAnimalTokenContract.methods\r\n                    .animalTypes(animalTokenId)\r\n                    .call(), 10)/5)*5 + 2);\r\n                console.log(animalTokenId);\r\n                console.log(animalType);\r\n\r\n                setNewAnimalType(animalType);\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n    const onClickMint_ukiyo = async () => {\r\n        try {\r\n            if (!account) return;\r\n\r\n            const response = await mintAnimalTokenContract.methods\r\n                .mintAnimalToken()\r\n                .send({ from: account });\r\n\r\n            if (response.status)\r\n            {\r\n                const balanceLength = await mintAnimalTokenContract.methods\r\n                    .balanceOf(account)\r\n                    .call();\r\n                console.log(balanceLength);\r\n\r\n                const animalTokenId = Math.floor(parseInt(await mintAnimalTokenContract.methods\r\n                    .tokenOfOwnerByIndex(account, parseInt(balanceLength, 10) - 1)\r\n                    .call(),10)/5)*5+3;\r\n\r\n                const animalType = String(Math.floor(parseInt(await mintAnimalTokenContract.methods.animalTypes(animalTokenId).call(),10)/5)*5+3);\r\n                console.log(animalTokenId);\r\n                console.log(animalType);\r\n\r\n                setNewAnimalType(animalType);\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n    const onClickMint_vangogh = async () => {\r\n        try {\r\n            if (!account) return;\r\n            const response = await mintAnimalTokenContract.methods\r\n                .mintAnimalToken()\r\n                .send({ from: account });\r\n\r\n            if (response.status)\r\n            {\r\n                const balanceLength = await mintAnimalTokenContract.methods\r\n                    .balanceOf(account)\r\n                    .call();\r\n                console.log(balanceLength);\r\n\r\n                const animalTokenId = Math.floor(parseInt(await mintAnimalTokenContract.methods.tokenOfOwnerByIndex(account, parseInt(balanceLength, 10) - 1).call(),10)/5)*5+4;\r\n                const animalType = String(Math.floor(parseInt(await mintAnimalTokenContract.methods.animalTypes(animalTokenId).call(), 10) / 5) * 5 + 4);\r\n            \r\n                console.log(animalTokenId);\r\n                console.log(animalType);\r\n\r\n                setNewAnimalType(animalType);\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n            return (\r\n                <Flex\r\n                    w=\"90vh\"\r\n                    h=\"20vh\"\r\n                    justifyContent=\"space-around\"\r\n                    alignItems=\"center\"\r\n                    direction=\"row\"\r\n                >\r\n                    <Box>\r\n                        {newAnimalType ? (\r\n                            <AnimalCard animalType={newAnimalType} />\r\n                        ) : (\r\n                            <Text></Text>\r\n                        )}\r\n                    </Box>\r\n                    <Button mt={4} size=\"sm\" colorScheme=\"blue\" onClick={onClickMint_org}>\r\n                        org\r\n                    </Button>\r\n                    <Button mt={4} size=\"sm\" colorScheme=\"blue\" onClick={onClickMint_cezanne}>\r\n                        cezanne\r\n                    </Button>\r\n                    <Button mt={4} size=\"sm\" colorScheme=\"blue\" onClick={onClickMint_monet}>\r\n                        monet\r\n                    </Button>\r\n                    <Button mt={4} size=\"sm\" colorScheme=\"blue\" onClick={onClickMint_ukiyo}>\r\n                        ukiyo\r\n                    </Button>\r\n                    <Button mt={4} size=\"sm\" colorScheme=\"blue\" onClick={onClickMint_vangogh}>\r\n                        vangogh\r\n                    </Button>\r\n                </Flex>\r\n         );\r\n};\r\nexport default Main;","import {\r\n    Box,\r\n    Button,\r\n    Input,\r\n    InputGroup,\r\n    InputRightAddon,\r\n    Text,\r\n} from \"@chakra-ui/react\";\r\nimport React, { ChangeEvent, FC, useState } from \"react\";\r\nimport { saleAnimalTokenContract, web3 } from \"../web3Config\";\r\n\r\nimport AnimalCard from \"./AnimalCard\";\r\n\r\nexport interface IMyAnimalCard {\r\n    animalTokenId: string;\r\n    animalType: string;\r\n    animalPrice: string;\r\n}\r\n\r\ninterface MyAnimalCardProps extends IMyAnimalCard {\r\n    saleStatus: boolean;\r\n    account: string;\r\n}\r\n\r\nconst MyAnimalCard: FC<MyAnimalCardProps> = ({\r\n    animalTokenId,\r\n    animalType,\r\n    animalPrice,\r\n    saleStatus,\r\n    account,\r\n}) => {\r\n    const [sellPrice, setSellPrice] = useState<string>(\"\");\r\n    const [myAnimalPrice, setMyAnimalPrice] = useState<string>(animalPrice);\r\n\r\n    const onChangeSellPrice = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setSellPrice(e.target.value);\r\n    };\r\n\r\n    const onClickSell = async () => {\r\n        try {\r\n            if (!account || !saleStatus) return;\r\n\r\n            const response = await saleAnimalTokenContract.methods\r\n                .setForSaleAnimalToken(\r\n                    animalTokenId,\r\n                    web3.utils.toWei(sellPrice, \"ether\")\r\n                )\r\n                .send({ from: account });\r\n\r\n            if (response.status) {\r\n                setMyAnimalPrice(web3.utils.toWei(sellPrice, \"ether\"));\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Box textAlign=\"center\" w={150}>\r\n            <AnimalCard animalType={animalType} />\r\n            <Box mt={2}>\r\n                {myAnimalPrice === \"0\" ? (\r\n                    <>\r\n                        <InputGroup>\r\n                            <Input\r\n                                type=\"number\"\r\n                                value={sellPrice}\r\n                                onChange={onChangeSellPrice}\r\n                            />\r\n                            <InputRightAddon children=\"Matic\" />\r\n                        </InputGroup>\r\n                        <Button size=\"sm\" colorScheme=\"green\" mt={2} onClick={onClickSell}>\r\n                            Sell\r\n                        </Button>\r\n                    </>\r\n                ) : (\r\n                    <Text d=\"inline-block\">\r\n                        {web3.utils.fromWei(myAnimalPrice)} Matic\r\n                    </Text>\r\n                )}\r\n            </Box>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default MyAnimalCard;\r\n","import { Flex, Button, Grid, Text } from \"@chakra-ui/react\";\r\nimport React, { FC, useEffect, useState } from \"react\";\r\nimport MyAnimalCard, { IMyAnimalCard } from \"../components/MyAnimalCard\";\r\nimport {\r\n  mintAnimalTokenContract,\r\n  saleAnimalTokenAddress,\r\n  saleAnimalTokenContract,\r\n} from \"../web3Config\";\r\n\r\ninterface MyAnimalProps {\r\n  account: string;\r\n}\r\n\r\nconst MyAnimal: FC<MyAnimalProps> = ({ account }) => {\r\n    const [animalCardArray, setAnimalCardArray] = useState<IMyAnimalCard[]>();\r\n    const [saleStatus, setSaleStatus] = useState<boolean>(false);\r\n\r\n    const getAnimalTokens = async () => {\r\n        try {\r\n            const balanceLength = await mintAnimalTokenContract.methods.balanceOf(account).call();\r\n            if (balanceLength === \"0\") return;\r\n\r\n            const tempAnimalCardArray: IMyAnimalCard[] = [];\r\n\r\n            const response = await mintAnimalTokenContract.methods.getAnimalTokens(account).call();\r\n\r\n            response.map((v: IMyAnimalCard) => {\r\n                tempAnimalCardArray.push({\r\n                    animalTokenId: v.animalTokenId,\r\n                    animalType: v.animalType,\r\n                    animalPrice: v.animalPrice,\r\n                });\r\n            });\r\n            setAnimalCardArray(tempAnimalCardArray);\r\n        }   catch (error) {\r\n        console.error(error);\r\n        }   \r\n    };\r\n  \r\n  const getIsApprovedForAll = async () => {\r\n    try {\r\n      const response = await mintAnimalTokenContract.methods.isApprovedForAll(account, saleAnimalTokenAddress).call();\r\n\r\n      if (response) {\r\n           setSaleStatus(response);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const onClickApproveToggle = async () => {\r\n    try {\r\n      if (!account) return;\r\n\r\n      const response = await mintAnimalTokenContract.methods.setApprovalForAll(saleAnimalTokenAddress, !saleStatus).send({ from: account });\r\n\r\n      if (response.status) {\r\n        setSaleStatus(!saleStatus);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!account) return;\r\n\r\n    getIsApprovedForAll();\r\n    getAnimalTokens();\r\n  }, [account]);\r\n\r\n  return (\r\n    <>\r\n      <Flex alignItems=\"center\">\r\n        <Text display=\"inline-block\">\r\n          Sale Status : {saleStatus ? \"True\" : \"False\"}\r\n        </Text>\r\n        <Button\r\n          size=\"xs\"\r\n          ml={2}\r\n          colorScheme={saleStatus ? \"red\" : \"blue\"}\r\n          onClick={onClickApproveToggle}\r\n        >\r\n          {saleStatus ? \"Cancel\" : \"Approve\"}\r\n        </Button>\r\n      </Flex>\r\n      <Grid templateColumns=\"repeat(4, 1fr)\" gap={8} mt={4}>\r\n        {animalCardArray &&\r\n          animalCardArray.map((v, i) => {\r\n            return (\r\n              <MyAnimalCard\r\n                key={i}\r\n                animalTokenId={v.animalTokenId}\r\n                animalType={v.animalType}\r\n                animalPrice={v.animalPrice}\r\n                saleStatus={saleStatus}\r\n                account={account}\r\n                />\r\n            );\r\n          })}\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyAnimal;\r\n","import { Box, Button, Text } from \"@chakra-ui/react\";\r\nimport React, { FC, useEffect, useState } from \"react\";\r\nimport {\r\n  mintAnimalTokenContract,\r\n  saleAnimalTokenContract,\r\n  web3,\r\n} from \"../web3Config\";\r\nimport AnimalCard from \"./AnimalCard\";\r\n\r\ninterface SaleAnimalCardProps {\r\n  animalType: string;\r\n  animalPrice: string;\r\n  animalTokenId: string;\r\n  account: string;\r\n  getOnSaleAnimalTokens: () => Promise<void>;\r\n}\r\n\r\nconst SaleAnimalCard: FC<SaleAnimalCardProps> = ({\r\n  animalType,\r\n  animalPrice,\r\n  animalTokenId,\r\n  account,\r\n  getOnSaleAnimalTokens,\r\n}) => {\r\n  const [isBuyable, setIsBuyable] = useState<boolean>(false);\r\n\r\n  const getAnimalTokenOnwer = async () => {\r\n    try {\r\n      const response = await mintAnimalTokenContract.methods\r\n        .ownerOf(animalTokenId)\r\n        .call();\r\n\r\n      setIsBuyable(\r\n        response.toLocaleLowerCase() === account.toLocaleLowerCase()\r\n      );\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const onClickBuy = async () => {\r\n    try {\r\n      if (!account) return;\r\n\r\n      const response = await saleAnimalTokenContract.methods\r\n        .purchaseAnimalToken(animalTokenId)\r\n        .send({ from: account, value: animalPrice });\r\n\r\n      if (response.status) {\r\n        getOnSaleAnimalTokens();\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAnimalTokenOnwer();\r\n  }, []);\r\n\r\n  return (\r\n    <Box textAlign=\"center\" w={150}>\r\n      <AnimalCard animalType={animalType} />\r\n      <Box>\r\n        <Text d=\"inline-block\">{web3.utils.fromWei(animalPrice)} Matic</Text>\r\n        <Button\r\n          size=\"sm\"\r\n          colorScheme=\"green\"\r\n          m={2}\r\n          disabled={isBuyable}\r\n          onClick={onClickBuy}\r\n        >\r\n          Buy\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SaleAnimalCard;\r\n","import React, { FC, useEffect, useState } from \"react\";\r\nimport { Grid } from \"@chakra-ui/react\";\r\nimport { IMyAnimalCard } from \"../components/MyAnimalCard\";\r\nimport {\r\n  mintAnimalTokenContract,\r\n  saleAnimalTokenContract,\r\n} from \"../web3Config\";\r\nimport SaleAnimalCard from \"../components/SaleAnimalCard\";\r\n\r\ninterface SaleAnimalProps {\r\n  account: string;\r\n}\r\n\r\nconst SaleAnimal: FC<SaleAnimalProps> = ({ account }) => {\r\n    const [saleAnimalCardArray, setSaleAnimalCardArray] = useState<IMyAnimalCard[]>();\r\n\r\n    const getOnSaleAnimalTokens = async () => {\r\n        try {\r\n            const onSaleAnimalTokenArrayLength = 5;\r\n\r\n            const tempOnSaleArray: IMyAnimalCard[] = [];\r\n\r\n            for (let i = 0; i <3; i++) {\r\n                const animalTokenId = await saleAnimalTokenContract.methods.onSaleAnimalTokenArray(i).call();\r\n            \r\n                const animalType = await mintAnimalTokenContract.methods.animalTypes(animalTokenId).call();\r\n\r\n                const animalPrice = await saleAnimalTokenContract.methods.animalTokenPrices(animalTokenId).call();\r\n\r\n                tempOnSaleArray.push({ animalTokenId, animalType, animalPrice });\r\n            }\r\n\r\n            setSaleAnimalCardArray(tempOnSaleArray);\r\n        }   catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n  useEffect(() => {\r\n    getOnSaleAnimalTokens();\r\n  }, []);\r\n\r\n  return (\r\n    <Grid mt={4} templateColumns=\"repeat(4, 1fr)\" gap={8}>\r\n      {saleAnimalCardArray &&\r\n        saleAnimalCardArray.map((v, i) => {\r\n          return (\r\n            <SaleAnimalCard\r\n              key={i}\r\n              animalType={v.animalType}\r\n              animalPrice={v.animalPrice}\r\n              animalTokenId={v.animalTokenId}\r\n              account={account}\r\n              getOnSaleAnimalTokens={getOnSaleAnimalTokens}\r\n            />\r\n          );\r\n        })}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default SaleAnimal;\r\n","import React, { FC, useEffect, useState } from \"react\";\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport Layout from \"./components/Layout\";\r\n\r\nimport Main from \"./routes/main\";\r\nimport MyAnimal from \"./routes/my-animal\";\r\nimport SaleAnimal from \"./routes/sale-animal\";\r\n\r\nconst App: FC = () => {\r\n  const [account, setAccount] = useState<string>(\"\");\r\n\r\n  const getAccount = async () => {\r\n    try {\r\n      if (window.ethereum) {\r\n        const accounts = await window.ethereum.request({\r\n          method: \"eth_requestAccounts\",\r\n        });\r\n\r\n        setAccount(accounts[0]);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAccount();\r\n  }, [account]);\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Layout>\r\n        <Routes>\r\n          <Route path=\"/\" element={<SaleAnimal account={account} />} />\r\n          <Route path=\"main\" element={<Main account={account} />} />\r\n          <Route path=\"my-animal\" element={<MyAnimal account={account} />} />\r\n        </Routes>\r\n      </Layout>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { ChakraProvider } from \"@chakra-ui/react\";\r\n\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ChakraProvider>\r\n      <App />\r\n    </ChakraProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}